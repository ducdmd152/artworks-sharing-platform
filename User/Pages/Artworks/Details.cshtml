@page
@model User.Pages.Artworks.DetailsModel
@{
    ViewData["Title"] = "ArtHub | Artwork Details";
}
<head>
    <link href="https://fonts.googleapis.com/css?family=Open+Sans:400,600,700" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
    <style>
        .artwork-exploration {
            max-width: 768px;
            margin: auto;
            padding: 20px;
            font-family: 'Open Sans', sans-serif;
        }

        .title-local {
            text-align: center;
            font-size: 24px;
            font-weight: 600;
        }

        .main-artwork {
            text-align: center;
            margin-bottom: 20px;
        }

        .main-image {
            width: 100%;
            height: auto;
            border-radius: 8px;
        }

        .artwork-details {
            text-align: center;
        }

        .loves-saveds {
            margin-bottom: 10px;
        }

        .loves, .saveds {
            font-size: 16px;
            margin-right: 15px;
        }

            .loves i, .saveds i {
                margin-right: 5px;
            }

        .artist-info {
            display: flex;
            align-items: center;
            justify-content: center;
            margin-bottom: 10px;
        }

        .artist-profile-pic {
            width: 36px;
            height: 36px;
            border-radius: 50%;
            margin-right: 10px;
        }

        .artist-name {
            font-size: 20px;
            font-weight: bold;
        }

        .artwork-description {
            font-size: 16px;
            color: #666;
            margin-bottom: 20px;
            text-align: left;            
        }

        .more-artwork h2 {
            font-size: 20px;
            margin-bottom: 15px;
        }

        .thumbnails {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
            justify-content: space-between;
        }

        .thumbnail {
            flex: 1;
            max-width: 320px;
            overflow: hidden;
            border-radius: 8px;
        }

        .thumbnail-image {
            width: 100%;
            height: 160px;
            object-fit: cover;
            object-position: center;
        }

        #love, #bookmark {
            display: inline-flex;
            justify-content: center;
            align-items: center;
            height: 40px;
            width: 40px;
            border-radius: 100rem;
            border: 1px #ddd solid;
            color: gray;
        }

        #love:hover, #bookmark:hover {
            transform: scale(1.1);
            cursor: pointer;
        }

        #love.did ,#love:hover i {
            color: indianred;
        }

        #bookmark.did, #bookmark:hover i {
            color: goldenrod;
        }

        .gallery {
            display: grid;
            grid-template-columns: repeat(4, 1fr);
            gap: 24px;
        }

        .gallery-item {
            position: relative;
            background: #ffffff;
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        .gallery-image {
            width: 100%;
            display: block;
            height: 100px;
            object-fit: cover;
            object-position: center;
        }

        .gallery-item-info {
            padding: 4px;
            text-align: center;
        }

        .artist-name-suggest {
            margin: 8px 0;
            font-size: 12px;
            color: #333;
        }

        .gallery-item-stats {
            display: flex;
            justify-content: center;
            align-items: center;
            font-size: 14px;
        }

            .gallery-item-stats span {
                margin: 0 4px;
            }

        .likes,
        .comments {
            display: flex;
            align-items: center;
            font-size: 10px;
        }

            .likes i,
            .comments i {
                margin-right: 4px;
                font-size: 10px;
            }

        .user-short-item {
            display: flex;
            align-items: center;
            border-radius: 8px; /* Rounded corners for the container */
        }

        .artist-profile-pic-suggest {
            width: 16px; /* Profile picture size */
            height: 16px; /* Profile picture size */
            border-radius: 50%; /* Make the image round */
            margin-right: 4px; /* Space between the image and the name */
            object-fit: cover; /* Ensures the image covers the area */
        }

        .artist-name-suggest {
            font-size: 10px; /* Adjust as needed */
            color: #333; /* Dark grey color for the text */
            font-weight: 600; /* Bold font for the artist's name */
        }
        .gallery-item-title {
            position: absolute;
            top: 30%;
            left: 50%;
            transform: translate(-50%, -50%);
            color: dark;
            background: #ccc;
            font-weight: 600;
            font-size: 10px;
            padding: 5px 10px;
            border-radius: 5px;
            opacity: 0;
            transition: opacity 0.3s;
            max-width: 220px;
        }

        .gallery-item:hover {
            cursor: pointer;
        }

        .gallery-item:hover .gallery-image {
            opacity: 0.6;            
        }
        .gallery-item:hover .gallery-item-title {
            opacity: 1;
        }
        @@media (max-width: 768px) {
            .thumbnails {
                flex-direction: column;
                align-items: center;
            }

            .thumbnail {
                width: 100%;
            }            
        }
    </style>
</head>
<body>
  <div class="artwork-exploration">
      <div class="d-flex justify-content-between align-items-center mb-2">
        <h1 class="title-local">@Model.Post?.Title</h1>
        <div class="gallery-item-stats">
                <span id="love" class=@(Model.IsReacted ? "did" : "")><i class="fa-solid fa-heart"></i> </span>
                <span id="bookmark" class=@(Model.IsBookmarked ? "did ms-2" : "ms-2")><i class="fa-solid fa-bookmark"></i></span>
        </div>
      </div>
      <div class="main-artwork">
        <img src="@(Model.Post?.Images.FirstOrDefault()?.ImageUrl ?? "https://placehold.co/768x432")" alt="Main Artwork Image" class="main-image">
      </div>
      <div class="artwork-details">
        
        <div class="d-flex justify-content-between align-items-center">
            <div class="artist-info">
                  <img src="@(Model.Post?.Artist?.Account?.Avatar ?? "https://placehold.co/50")" alt="Artist Profile Picture" class="artist-profile-pic">
                  <span class="artist-name">@Model.Post?.Artist?.ArtistName</span>
            </div>
            <div class="loves-saveds">
                <span class="loves"><i class="fas fa-heart"></i> @Model.Post?.TotalReact</span>
                <span class="saveds"><i class="fas fa-bookmark"></i> @Model.Post?.TotalBookmark</span>
            </div>
        </div>
        <p class="artwork-description m-2">
            @Model.Post?.Description          
        </p>
      </div>
      <hr/>
      <div class="more-artwork mt-4">
        <h2 class="m-3 text-center">More from Martin Deavin</h2>
        <div class="thumbnails">
          @foreach (var item in Model.ArtistSuggestion)
          {
            <a class="thumbnail" asp-page="./Details" asp-route-id="@item.PostId" style="color: black; text-decoration: none;">
                <img src="@(item?.Images?.FirstOrDefault()?.ImageUrl ?? "https://placehold.co/300")" alt="Artwork Thumbnail" class="thumbnail-image">
            </a>
          }                       
        </div>
      </div>
      <hr/>
      @if (Model.OtherSuggestion != null) {
        <div class="more-artwork mb-4" style="margin-left: -32px; margin-right: -32px;">
            <h2 class="m-3 text-center">More by other creators</h2>
            <div class="gallery mt-2 mb-2">
                @foreach (var item in Model.OtherSuggestion)
                {
                    <a class="gallery-item" asp-page="./Details" asp-route-id="@item.PostId" style="color: black; text-decoration: none;">
                        <img src="@(item?.Images?.FirstOrDefault()?.ImageUrl ?? "https://placehold.co/300")"
                            class="gallery-image" />
                        <div class="gallery-item-title">@item.Title</div>
                        <div class="gallery-item-info d-flex justify-content-between">
                            <div class="user-short-item" style="flex: 2">
                                    <img src="@(item.Artist?.Account?.Avatar ?? "https://placehold.co/300")" class="artist-profile-pic-suggest" />
                                    <span class="artist-name-suggest">@item.Artist?.ArtistName</span>
                            </div>
                            <div class="gallery-item-stats flex-1 ml-1" style="flex: 1">
                                    <span class="likes"><i class="far fa-heart"></i> @item.TotalReact</span>
                                    <span class="comments"><i class="far fa-bookmark"></i> @item.TotalBookmark</span>
                            </div>
                        </div>
                    </a>
                }
            </div>
        </div>
      }
        
    </div>

</body>

<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>

<script type="text/javascript">
    $(document).ready(function () {
        $("#love").click(function () {
            var isReacted = !$(this).hasClass("did");
            var postId = @Model.Post.PostId;
            $(this).toggleClass("did");
            $.ajax({
                url: '/Artworks/Details?handler=ReactAsync&postId=' + postId,
                type: 'POST',
                success: function (result) {
                    console.log("Update successful");
                },
                error: function (xhr, status, error) {
                    if (xhr.status === 401) {
                        window.location.href = '/Login';
                    } else {
                        console.error("Error updating post reaction:", error);
                        $("#love").toggleClass("did");
                    }
                }
            });
        });
        $("#bookmark").click(function () {
            var isReacted = !$(this).hasClass("did");
            $(this).toggleClass("did");

            // Gửi yêu cầu AJAX đến máy chủ để cập nhật cơ sở dữ liệu
            //$.ajax({
            //    url: '/UpdatePostReaction',
            //    type: 'POST',
            //    contentType: 'application/json',
            //    data: JSON.stringify({ postId: postId, isReacted: isReacted }),
            //    success: function (result) {
            //        console.log("Update successful");
            //    },
            //    error: function (xhr, status, error) {
            //        console.error("Error updating post reaction:", error);
            //        $("#" + reactionType).toggleClass("did");
            //    }
            //});
        });
    });
</script>
