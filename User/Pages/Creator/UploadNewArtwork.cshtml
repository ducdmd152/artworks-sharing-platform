@page
@model User.Pages.Creator.UploadNewArtworkModel
@{    
}
<div class="container mb-4" style="margin-top: 100px;">
    <div class="title text-center mt-4">
        <h2 class="position-relative d-inline-block">Upload New Artwork</h2>
    </div>
    <form method="post" enctype="multipart/form-data">
        <div id="file-upload-container" class="file-upload-container my-4" ondragover="handleDragOver(event)" ondrop="handleDrop(event)">
            <input type="file" asp-for="@Model.FileUpload" id="file-upload" onchange="previewImage()" accept="image/*" />
            <label for="file-upload">
                Drag a file here <br> or, if you prefer... <br>
            </label>
            <div id="image-preview" class="my-4" style="display: none;">
                <img id="preview" class="img-fluid" src="#" alt="Uploaded Image" style="max-width: 100%; max-height: 70%;">
            </div>            
        </div>
        <span id="errorMessageFileUpload" class="text-danger">@ViewData["ErrorMessageFileUpload"]</span>
        <div class="d-flex justify-content-between mb-4">
            <div class="form-group col-12">
                <label for="artworkTitle">Artwork Title</label>
                <input asp-for="@Model.Post.Title" type="text" class="form-control" id="artworkTitle" placeholder="Enter the title...">
                <input type="hidden" asp-for="Post.Title" />
                <span asp-validation-for="@Model.Post.Title" class="text-danger"></span>
            </div>
        </div>
        <label for="artworkTitle">Category</label>
        <div class="d-flex align-items-center justify-content-around mb-3" style="width: 100%; height: 40px; border: 1px solid #767676;">
            @foreach (var category in Model.Categories)
            {
                <div class="form-check">
                    <input name="SelectedCategories" class="form-check-input" type="checkbox" value="@category.CategoryId" />
                    <label class="form-check-label">
                        @category.CategoryName
                    </label>
                </div>
            }
        </div>
        <span id="errorMessageCategories" class="text-danger">@ViewData["ErrorMessageCategories"]</span>
        @{
            var categories = Model.Categories.ToList();
        }
        @for (var i = 0; i < categories.Count; i++)
        {
            <input type="hidden" name="Categories[@i].CategoryId" value="@categories[i].CategoryId">
            <input type="hidden" name="Categories[@i].CategoryName" value="@categories[i].CategoryName">
        }
        
        <div class="form-group mb-4">
            <label for="description">Description</label>
            <textarea asp-for="@Model.Post.Description" class="form-control" id="description" rows="3" placeholder="Enter the description..."></textarea>
            <input type="hidden" asp-for="Post.Description" />
            <span asp-validation-for="@Model.Post.Description" class="text-danger"></span>
        </div>
        
        <div class="form-group form-check">
            <input type="radio" class="form-check-input" id="public" name="PostScope" value="@Model.PostScopePublic" checked>
            <label class="form-check-label" for="public">Public</label>
        </div>
        <div class="form-group form-check">
            <input type="radio" class="form-check-input" id="subscriberOnly" name="PostScope" value="@Model.PostScopeSubscriber">
            <label class="form-check-label" for="subscriberOnly">Subscriber Only</label>
        </div>
        <div class="form-group form-check">
            <input type="radio" class="form-check-input" id="private" name="PostScope" value="@Model.PostScopePrivate">
            <label class="form-check-label" for="private">Private</label>
        </div>        
        <div class="d-flex justify-content-end">
            <button type="button" id="previewButton" class="btn btn-primary me-4">Preview</button>
            <button type="button" class="btn btn-primary">Cancel</button>
        </div>
        <span id="errorMessagePostScope" class="text-danger">@ViewData["ErrorMessagePostScope"]</span>
        <input type="hidden" asp-for="@Model.Post.Scope" />
        <!-- Popup show upload artwork -->
        <div class="modal fade" id="artworkDetailModal" tabindex="-1" role="dialog" aria-labelledby="artworkDetailModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-lg" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="modalArtworkTitle">Artwork Title</h5>                        
                        <button type="button" class="btn closeModalBtn" onclick="onCloseClick()">
                            <i class="fa-solid fa-xmark"></i>
                        </button>
                    </div>
                    <div class="modal-body">
                        <img src="" alt="Artwork" id="modalImagePreview" class="img-fluid">
                        <div class="d-flex align-items-center">
                            <span class="me-1 fw-bold">Audience:</span>
                            <span id="modalVisibility">Audience</span>                            
                        </div>                        
                        <p id="modalDescription">Des<p />
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="closeModalBtn btn btn-secondary" onclick="onCloseClick()">Cancel</button>
                        <button id="uploadButton" type="submit" class="btn btn-secondary">Upload</button>
                    </div>
                </div>
            </div>
        </div>
    </form>    
</div>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
<script src="~/js/site.js" asp-append-version="true"></script>
<script>
    var failUploadImageMessage = '@TempData["FailUploadImage"]';
    if (failUploadImageMessage) {
        showOutOfStockToastDanger('Upload Image', failUploadImageMessage);
    }

    var failUpdatePostMessage = '@TempData["FailCreatePost"]';
    if (failUpdatePostMessage) {
        showOutOfStockToastDanger('Create', failUpdatePostMessage);
    }

    document.querySelector('#uploadButton').addEventListener('click', function () {        
        document.querySelector('#errorMessageCategories').textContent = '';
        document.querySelector('#errorMessageFileUpload').textContent = '';
        document.querySelector('#errorMessagePostScope').textContent = '';
    });

    document.querySelector('#previewButton').addEventListener('click', function () {
        // Get user input values
        var title = document.querySelector('#artworkTitle').value || "Untitled";
        var description = document.querySelector('#description').value || "No description provided.";
        
        var visibilityElements = document.getElementsByName('PostScope');
        var visibility;
        for (var i = 0; i < visibilityElements.length; i++) {
            if (visibilityElements[i].checked) {
                visibility = visibilityElements[i].value;
                break;
            }
        }        
        var imageSrc = document.querySelector('#preview').src;

        // Set values to modal elements
        document.querySelector('#modalArtworkTitle').textContent = title;
        document.querySelector('#modalImagePreview').src = imageSrc;
        document.querySelector('#modalDescription').textContent = description;
        document.querySelector('#modalVisibility').textContent = visibility;

        // Show the modal using jQuery
        $('#artworkDetailModal').modal('show');
    });

    function onCloseClick() {
        $('#artworkDetailModal').modal('hide');
    }


    function handleDragOver(event) {
        event.preventDefault();
        event.dataTransfer.dropEffect = 'copy'; // Explicitly show this is a copy.
    }

    function handleDrop(event) {
        event.preventDefault();

        var files = event.dataTransfer.files;
        var fileInput = document.getElementById('file-upload');
        fileInput.files = files;

        previewImage();
    }
    function previewImage() {
        var preview = document.querySelector('#preview');
        var file = document.querySelector('#file-upload').files[0];
        var reader = new FileReader();
        var label = document.querySelector('label[for="file-upload"]'); // Get the label element

        reader.onloadend = function () {
            preview.src = reader.result;
            document.getElementById('image-preview').style.display = "block";
            //label.style.display = "none"; // Hide the label when an image is uploaded
        }

        if (file) {
            reader.readAsDataURL(file);
        } else {
            preview.src = "";
            //label.style.display = "block"; // Show the label when no image is selected
        }
    }
</script>