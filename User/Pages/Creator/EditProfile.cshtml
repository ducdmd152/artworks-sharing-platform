@page
@model User.Pages.Creator.EditProfileModel
@{
}
<style>
    .profile-sidebar {
        border-right: 1px solid #dddddd;
    }

    .profile-main {
        padding: 20px;
    }

        .profile-main .btn {
            border-radius: 20px;
        }

    .profile-img {
        width: 60px;
        height: 60px;
        border-radius: 100%;
        overflow: hidden;
        margin: 0 10px 0 0;
    }

        .profile-img img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

    .btn-profile-picture {
        margin-bottom: 10px;
    }
</style>

<div class="container pt-5">
    <div class="d-flex">
        <partial name="Shared/_LeftSideBardEditProfile" model="Model.AccountUpdateType" />
        @if (Model.AccountUpdateType.TypeUpdate == 1)
        {
            <div class="ms-4" style="width:70%;">
                <form class="mt-4" id="updateProfileInfo">
                    <input asp-for="@Model.AccountUpdate.Email" type="hidden" class="form-control">
                    <div class="d-flex justify-content-start align-items-center">
                        <div class="profile-img">
                            <img id="profileImage" src="@(Model.AccountUpdate.Avatar ?? "https://placehold.it/60x60")" alt="Profile Image">
                        </div>
                        <input type="file" asp-for="@Model.FileUpload" id="uploadImage" class="d-none">
                        <input asp-for="@Model.AccountUpdate.Avatar" type="hidden" class="form-control" id="avatar">
                        <button type="button" id="uploadBtn" class="btn position-relative me-3">Upload new</button>
                        <button type="button" id="deleteBtn" class="btn position-relative">Delete picture</button>
                    </div>
                    <div class="form-group mt-3 col-md-5">
                        <label for="email">Email</label>
                        <input type="email" class="form-control" id="email" disabled placeholder="@Model.AccountUpdate.Email">
                    </div>
                    <div class="d-flex justify-content-between form-row">
                        <div class="form-group mt-3 col-md-5">
                            <label for="firstName">First Name <small class="text-danger">*</small></label>
                            <input asp-for="@Model.AccountUpdate.FirstName" type="text" class="form-control" id="firstName" placeholder="First Name">
                            <span asp-validation-for="@Model.AccountUpdate.FirstName" class="text-danger"></span>
                        </div>
                        <div class="form-group mt-3 col-md-6">
                            <label for="lastName">Last Name <small class="text-danger">*</small></label>
                            <input asp-for="@Model.AccountUpdate.LastName" type="text" class="form-control" id="lastName" placeholder="Last Name">
                            <span asp-validation-for="@Model.AccountUpdate.LastName" class="text-danger"></span>
                        </div>
                    </div>

                    <div class="d-flex justify-content-between mt-3">
                        <div class="form-group mt-3 col-md-5">
                            <label for="artistName">Artist Name <small class="text-danger">*</small></label>
                            <input asp-for ="@Model.AccountUpdate.ArtistName" type="text" class="form-control" id="artistName" placeholder="Artist Name">
                            <span asp-validation-for="@Model.AccountUpdate.ArtistName" class="text-danger"></span>
                        </div>
                        <div class="d-flex align-items-end mb-2 col-md-6">
                            <div class="me-3" style="margin-bottom:1px;">
                                <label for="gender">Gender:</label>
                            </div>
                            <div class="form-group form-check me-3 mb-0">
                                <input type="radio" class="form-check-input" id="male" name="Gender" value="Male" checked="@Model.AccountUpdate.Gender.Equals("Male")">
                                <label class="form-check-label" for="male">Male</label>
                            </div>
                            <div class="form-group form-check  mb-0">
                                <input type="radio" class="form-check-input" id="female" name="Gender" value="Female" checked="@Model.AccountUpdate.Gender.Equals("Female")">
                                <label class="form-check-label" for="female">Female</label>
                            </div>
                        </div>
                        <span id="errorMessageGender" class="text-danger">@ViewData["ErrorMessageGender"]</span>
                    </div>

                    <div class="form-group  mt-3">
                        <label for="bio">Bio</label>
                        <textarea asp-for="@Model.AccountUpdate.Bio" class="form-control" id="bio" rows="3"></textarea>
                        <span asp-validation-for="@Model.AccountUpdate.Bio" class="text-danger"></span>
                    </div>
                    <button type="button" onclick="updateProfileInfo()" id="saveProfile" class="btn btn-dark  mt-3">Save Profile</button>
                </form>
            </div>
        } else if (Model.AccountUpdateType.TypeUpdate == 2)
        {
            <div class="ms-4" style="width:70%;">
                <form class="mt-4" id="changePassword">
                    <div class="form-group mt-3 col-md-5">
                        <label for="oldPassword">Old Password</label>                        
                        <input asp-for="PasswordConfirm.OldPassword" type="password" class="form-control" id="oldPassword" placeholder="Old Password">
                        <span asp-validation-for="PasswordConfirm.OldPassword" class="text-danger"></span>
                    </div>
                    <div class="form-group mt-3 col-md-5">
                        <label for="newPasword">New password</label>
                        <input asp-for="PasswordConfirm.NewPassword" type="password" class="form-control" id="newPasword" placeholder="New password">
                        <span asp-validation-for="PasswordConfirm.NewPassword" class="text-danger"></span>
                    </div>
                    <div class="form-group mt-3 col-md-5">
                        <label for="confirmPassword">Confirm password</label>
                        <input asp-for="PasswordConfirm.ConfirmPassword" type="password" class="form-control" id="confirmPassword" placeholder="Confirm password">
                        <span asp-validation-for="PasswordConfirm.ConfirmPassword" class="text-danger"></span>
                    </div>
                    <button type="button" class="btn btn-dark mt-3" onclick="changePassword()">Save New Password</button>
                </form>
            </div>
        } else if (Model.AccountUpdateType.TypeUpdate == 3)
        {
            <form class="ms-4">
                <div class="form-group mt-3 col-md-12">
                    <label for="subscribeFee">Subscribe Fee</label>
                    <input type="number" class="form-control" id="subscribeFee" placeholder="Subscribe Fee">
                </div>                
                <button type="button" class="btn btn-dark  mt-3">Save</button>
            </form>
        } else if (Model.AccountUpdateType.TypeUpdate == 4)
        {
            <form class="mt-4" id="deleteAccount">
                <button type="button" class="btn btn-dark ms-3" onclick="deleteAccount()">Delete Account</button>
            </form>            
        }
    </div>

    <partial name="Shared/Partial/_toastyAnnouncePartial" />
</div>
@Html.AntiForgeryToken()
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
<script src="~/js/site.js" asp-append-version="true"></script>
<script>
    $(document).ready(function () {
        // Trigger file input when 'Upload new' is clicked
        $('#uploadBtn').on('click', function (e) {
            e.preventDefault(); // Prevent any default button action
            $('#uploadImage').trigger('click');
        });

        // Update profile image when a new image file is selected
        $('#uploadImage').change(function (event) {
            if (event.target.files && event.target.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    $('#profileImage').attr('src', e.target.result);
                };
                reader.readAsDataURL(event.target.files[0]);
            }
        });

        // Delete the profile picture and set it to the placeholder
        $('#deleteBtn').on('click', function (e) {
            e.preventDefault(); // Prevent any default button action
            $('#profileImage').attr('src', 'https://placehold.it/60x60?t=' + new Date().getTime());
            $('#uploadImage').val(''); // Clear the file input
            $('#avatar').val('');
        });
    });


    document.querySelector('#saveProfile').addEventListener('click', function () {
        document.querySelector('#errorMessageGender').textContent = '';        
    });

    function updateProfileInfo() {
        var form = document.forms.namedItem("updateProfileInfo");
        var $form = $(form);

        // Trigger validation
        $form.validate();

        if ($form.valid()) {
            var data = new FormData(form);

            $.ajax({
                url: '/Creator/EditProfile?handler=UpdateProfileInfo',
                type: 'POST',
                headers: {
                    RequestVerificationToken: $('input:hidden[name="__RequestVerificationToken"]').val()
                },
                data: data,
                processData: false,  // Don't process the data (already FormData)
                contentType: false,  // Don't set contentType (let jQuery handle it)
                success: function (response) {
                    if (response.result === 'Error') {                        
                        showOutOfStockToastDanger('Fail', response.data);
                    } else {                        
                        showOutOfStockToastSuccess('Upload', response.data);
                        setTimeout(function () {
                            window.location.href = '/Creator/EditProfile';
                        }, 2000);
                    }                                       
                },
                error: function (error) {
                    console.error('Error loading partial:', error);
                }
            });
        } else {
            console.error('Client-side validation failed.');
        }
    }

    function changePassword() {
        var form = document.forms.namedItem("changePassword");
        var $form = $(form);

        // Trigger validation
        $form.validate();

        if ($form.valid()) {
            var data = new FormData(form);

            $.ajax({
                url: '/Creator/EditProfile?handler=ChangePassword',
                type: 'POST',
                headers: {
                    RequestVerificationToken: $('input:hidden[name="__RequestVerificationToken"]').val()
                },
                data: data,
                processData: false,  // Don't process the data (already FormData)
                contentType: false,  // Don't set contentType (let jQuery handle it)
                success: function (response) {
                    if (response.result === 'Error') {
                        showOutOfStockToastDanger('Fail', response.data);
                    } else {
                        showOutOfStockToastSuccess('Success', response.data);
                        setTimeout(function () {
                            window.location.href = '/Authenticate/Login';
                        }, 2000);
                    }                    
                },
                error: function (error) {
                    console.error('Error loading partial:', error);
                }
            });
        } else {
            console.error('Client-side validation failed.');
        }
    }

    function deleteAccount() {
        var form = document.forms.namedItem("deleteAccount");
        var $form = $(form);

        // Trigger validation
        $form.validate();

        if ($form.valid()) {
            var data = new FormData(form);
            var confirmReject = confirm("Are you sure to delete your account?");

            // If user confirms, proceed with rejection
            if (confirmReject) {
                $.ajax({
                    url: '/Creator/EditProfile?handler=DeleteAccount',
                    type: 'POST',
                    headers: {
                        RequestVerificationToken: $('input:hidden[name="__RequestVerificationToken"]').val()
                    },
                    data: data,
                    processData: false,  // Don't process the data (already FormData)
                    contentType: false,  // Don't set contentType (let jQuery handle it)
                    success: function (response) {
                        if (response.result === 'Error') {
                            showOutOfStockToastDanger('Fail', response.data);
                        } else {
                            showOutOfStockToastSuccess('Success', response.data);
                            setTimeout(function () {
                                window.location.href = '/';
                            }, 2000);
                        }
                    },
                    error: function (error) {
                        console.error('Error loading partial:', error);
                    }
                });
            }            
        } else {
            console.error('Client-side validation failed.');
        }
    }
</script>