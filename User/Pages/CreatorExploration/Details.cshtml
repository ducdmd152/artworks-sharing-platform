@page
@using ArtHubService.Utils;
@model User.Pages.CreatorExploration.DetailsModel
@{
}
<head>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <style>
        * {
            box-sizing: border-box;
        }

        body,
        h1,
        p {
            margin: 0;
            padding: 0;
        }

        body {
            font-family: "Open Sans", sans-serif;
            line-height: 1.6;
        }

        .container {
            width: 80%;
            margin: auto;
        }

        .banner {
            background: linear-gradient(to right, #a18cd1 0%, #fbc2eb 100%);
            text-align: center;
            color: white;
            padding: 4rem 0;
            height: 50vh;
            display: flex;
        }

        nav {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding-bottom: 2rem;
        }

            nav a {
                color: white;
                text-decoration: none;
                padding: 0 1rem;
            }

            nav input {
                padding: 0.5rem;
            }

        h1 {
            font-size: 2.5rem;
            margin-bottom: 1rem;
        }

        p {
            margin-bottom: 1rem;
        }

        .btn-local {
            display: inline-block;
            background: #6c5ce7;
            color: white;
            padding: 1rem 2rem;
            border-radius: 2rem;
            text-decoration: none;
            font-weight: bold;
        }

        .gallery {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 24px;
        }

        .gallery-item {
            position: relative;
            background: #ffffff;
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        .gallery-image {
            width: 100%;
            display: block;
            height: 240px;
            object-fit: cover;
            object-position: center;
        }

        .gallery-item-info {
            padding: 4px;
            text-align: center;
        }

        .artist-name {
            margin: 8px 0;
            font-size: 18px;
            color: #333;
        }

        .gallery-item-stats {
            display: flex;
            justify-content: center;
            align-items: center;
            font-size: 14px;
        }

           .gallery-item-stats span {
            margin: 0 8px;
            }

            .likes,
            .comments {
                margin: 0;
            display: flex;
            align-items: center;
            }

            .likes i,
            .comments i {
                margin-right: 4px;
            }

        .user-short-item {
            display: flex;
            align-items: center;
            padding: 10px;
            border-radius: 8px; /* Rounded corners for the container */
        }

        .artist-profile-pic {
            width: 36px; /* Profile picture size */
            height: 36px; /* Profile picture size */
            border-radius: 50%; /* Make the image round */
            margin-right: 10px; /* Space between the image and the name */
            object-fit: cover; /* Ensures the image covers the area */
        }

        .artist-name {
            font-size: 16px; /* Adjust as needed */
            color: #333; /* Dark grey color for the text */
            font-weight: 600; /* Bold font for the artist's name */
        }

        .gallery-item-title {
            position: absolute;
            top: 40%;
            left: 50%;
            transform: translate(-50%, -50%);
            color: dark;
            background: #ccc;
            font-weight: 600;
            font-size: 16px;
            padding: 5px 10px;
            border-radius: 5px;
            opacity: 0;
            transition: opacity 0.3s;
            max-width: 220px;
        }

        .gallery-item:hover {
            cursor: pointer;
        }

            .gallery-item:hover .gallery-image {
                opacity: 0.6;
            }

            .gallery-item:hover .gallery-item-title {
                opacity: 1;
            }
        /* Add responsiveness */
        @@media (max-width: 768px) {
            .gallery {
                grid-template-columns: repeat(2, 1fr);
            }
        }

        @@media (max-width: 480px) {
            .gallery {
                grid-template-columns: 1fr;
            }
        }
        .btn-subscribed:hover {
            color: black !important;
            background: gray;
            border: solid 1px darkgray;           
            transform: scale(1.05);
        }

        .gallery-item {
            position: relative;
        }

        .scope-badge {
            position: absolute;
            top: 8px;
            left: 10px;
        }
    </style>
</head>
<form method="post" id="myForm">
    <div class="container mb-4 pt-3">
        <!-- Profile Section -->
        <section class="bg-gray-100 py-10">
            <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
                <div class="text-center">
                    <div class="inline-block rounded-full overflow-hidden h-40 w-40 border-8 border-white shadow-lg">
                        <img src="@Model.Creator.ArtistAvatar" class="h-40 w-40" style="object-fit: cover; object-position: center;" alt="Portrait of the artist">
                    </div>
                    <h1 class="mt-4 text-4xl font-semibold">@Model.Creator.ArtistName</h1>
             
                    <div class="text-sm text-gray-500 overflow-hidden" style="font-size: 16px; width: 300px; margin: auto; text-overflow: ellipsis; white-space: nowrap; display: grid; grid-template-columns: repeat(3, 1fr); grid-column-gap: 6px;">
                        <p class="fw-bold text-center">@Model.Creator.ArtistTotalSubscribe subcribers</p>
                        <p class="fw-bold text-center">@Model.Creator.ArtistTotalView views</p>
                        <p class="fw-bold text-center">@Model.Creator.ArtistTotalReact loved</p>
                    </div>
                    <p class="mt-2 text-sm text-gray-600">@Model.Creator.ArtistBio</p>
                    
                    <div class="mt-4" id="buttonAction"> 
                        @if (@Model.Creator.IsSubscribed == true)
                        {
                            <div class="dropdown">
                                <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuLink" data-bs-toggle="dropdown" aria-expanded="false">
                                    Subscribed
                                </button>
                                <ul class="dropdown-menu" aria-labelledby="dropdownMenuLink">
                                    <li onclick="showDialogUnSubscribe()"><a class="dropdown-item" href="#" >Unsubscribe</a></li>
                                </ul>
                            </div>
                        }
                        else
                        {
                            <button type="button" class="text-white-600 border-b-2 px-4 py-2 btn btn-dark" onclick="showDialogSubscribe()" >Subscribe</button>
                        }
              
                    </div>
                </div>
            </div>
        </section>

        <!-- Artworks Section -->
        <section class="mb-3">
            @if (@Model.Posts == null || @Model.Posts.Count == 0)
            {
                <div class="container p-5 mb-2">
                    <p class="text-dark fst-italic m-auto text-center" style="font-size: 20px;">No artworks available.</p>
                </div>
            }
            else
            {
                <div class="gallery p-5 mb-2">
                    @foreach (var item in Model.Posts)
                    {
                        <a class="gallery-item" href="/Artworks/Details?id=@item.PostId" style="color: black; text-decoration: none;">
                            <img src="@(item.Images.FirstOrDefault()?.ImageUrl ?? "https://placehold.co/300")"
                                 class="gallery-image" />
                            <div class="gallery-item-title">@item.Title</div>
                            <div class="gallery-item-info d-flex justify-content-between">
                                <div class="user-short-item" style="flex: 2">
                                    <img src="@(item.Artist?.Account?.Avatar ?? "https://placehold.co/300")" class="artist-profile-pic" />
                                    <span class="artist-name">@item.Artist?.ArtistName</span>
                                </div>
                                <div class="gallery-item-stats flex-1 ml-1" style="flex: 1">
                                    <span class="likes"><i class="fa-solid fa-heart"></i> @item.TotalReact</span>
                                    <span class="comments"><i class="fa-solid fa-eye"></i> @item.TotalView</span>
                                </div>
                            </div>
                            <div class="scope-badge">
                                @if (@item.Scope == 2)
                                {
                                    <span class="badge bg-secondary" style="font-size: 11px;">Subscriber Only</span>
                                }
                                else if (@item.Scope == 3)
                                {
                                    <span class="badge bg-dark">Private</span>
                                }

                            </div>
                        </a>
                    }
                </div>

                <partial name="Shared/_PagingPartial" model="@Model.SearchPayload.PageInfo"/>
            }
        </section>
    </div>
    
    <!-- Modal -->
    <div class="modal fade" id="confirmationSubModal" tabindex="-1" aria-labelledby="confirmationModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="confirmationModalLabel">Confirmation</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <span>Do you want to subscribe to the artist: <b>@Model.Creator.ArtistName</b> with a monthly fee of <b>@Model.FeeSubscribe</b> $</span>
                    <hr/>
                    <p class="fs-6 fst-italic">Notice: If you have a previous subscription to this creator that is still active, you will not be charged until the end of the current subscription period.</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" onclick="subscribes()">Confirm</button>
                </div>
            </div>
        </div>
    </div>
    
    <div class="modal fade" id="unsubscribeModal" tabindex="-1" aria-labelledby="unsubscribeModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="unsubscribeModalLabel">Unsubscribe</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want to unsubscribe from this artist?</p>
                    <div class="mb-3">
                        <label for="unsubReason" class="form-label">Reason for unsubscribing:</label>
                        <textarea type="text" class="form-control" id="unsubReason" placeholder="Enter reason" ></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" onclick="cancelSubscription()">Confirm</button>
                </div>
            </div>
        </div>
    </div>

</form>
<div id="spinner-overlay" class="invisible">
    <div class="spinner-border text-primary" role="status">
        <span class="visually-hidden">Loading...</span>
    </div>
</div>
<partial name="Shared/Partial/_toastyAnnouncePartial"/>
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
<script src="~/js/site.js" asp-append-version="true"></script>
@Html.AntiForgeryToken()
<script>

    function subscribes(){
        var spin = document.getElementById('spinner-overlay');
        spin.classList.remove('invisible');
        const urlParams = new URLSearchParams(window.location.search);
        var id = urlParams.get('id');

       $.ajax({
           url: '/CreatorExploration/Details?handler=Subscribers&id='+ id,
           type: 'POST',
           contentType: 'application/json',
           headers: {
               RequestVerificationToken: $('input:hidden[name="__RequestVerificationToken"]').val()
           },
           success: function (response) {
               // Handle success response here
               if(response.result === 'Ok'){
                   window.location.href = response.data;
               }else if (response.result === 'Error'){
                   showOutOfStockToastDanger("Subscribe", response.data);
                   spin.classList.add('invisible');
               }
               else if (response.result === 'Login'){
                    window.location.href = response.data;      
               }
               
           },
           error: function (error) {
               console.log(error);
               showOutOfStockToastDanger("Subscribe", "Fail");
               spin.classList.add('invisible');
           }
       });  
    }
    
    function showDialogSubscribe(){
         $('#confirmationSubModal').modal('show');
    }
    
    function showDialogUnSubscribe(){
         $('#unsubscribeModal').modal('show');
    }
        

    function cancelSubscription(){
        var spin = document.getElementById('spinner-overlay');
        spin.classList.remove('invisible');
        const urlParams = new URLSearchParams(window.location.search);
        var id = urlParams.get('id');
        var reason = document.getElementById('unsubReason');
        $.ajax({
            url: '/CreatorExploration/Details?handler=UnSubscription&creatorEmail='+ '@Model.Creator.ArtistEmail' + '&reason=' + reason.value,
            type: 'POST',
            contentType: 'application/json',
            headers: {
                RequestVerificationToken: $('input:hidden[name="__RequestVerificationToken"]').val()
            },
            success: function (response) {
                 spin.classList.add('invisible');
                // Handle success response here
                if(response.result === 'Ok'){
                    var buttonAction = document.getElementById('buttonAction');
                    buttonAction.innerHTML = '<button type="button" class="text-white-600 border-b-2 px-4 py-2 btn btn-dark" onclick="showDialogSubscribe()" >Subscribe</button>';
                    showOutOfStockToastSuccess("Cancel subscription", "Successfully");
                }else{
                    showOutOfStockToastDanger("Subscribe", response.data);
                }

                $('#unsubscribeModal').modal('hide');
            },
            error: function (error) {
                 spin.classList.add('invisible');
                showOutOfStockToastDanger("Subscribe", "Fail");
                $('#unsubscribeModal').modal('hide');
            }
        });  
    }
    
    function checkTransactionIsComplete(){
        if('@Model.CompleteTransactionCondition' === 'Ok'){
            showOutOfStockToastSuccess("Subscribe", "Successfully");
        }else if ('@Model.CompleteTransactionCondition' === 'Error'){
            showOutOfStockToastDanger("Subscribe", "Fail");
        }
    }

    checkTransactionIsComplete();
    
    function getListByPaging(pageIndex){
        const urlParams = new URLSearchParams(window.location.search);
        var id = urlParams.get('id');
        window.location.href = '/CreatorExploration/Details?pageIndex=' + pageIndex + '&id=' + id;
    }
</script>