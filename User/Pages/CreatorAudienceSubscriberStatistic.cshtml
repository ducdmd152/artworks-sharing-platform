@page
@model User.Pages.CreatorAudienceSubscriberStatisticModel
@{
}
<div class="container mb-4" style="margin-top: 100px;">
    <select id="timeFrameSelect" class="form-control mb-3">
        <option value="weekly">Weekly</option>
        <option value="monthly">12 Months</option>
    </select>
    <canvas id="subscriptionChart" width="400" height="200"></canvas>

</div>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    var ctx = document.getElementById('subscriptionChart').getContext('2d');
    var chart; // This will hold the chart instance

    // Function to create a chart
    function createChart(data, labels) {
        if (chart) {
            chart.destroy(); // If chart instance exists, destroy it before creating a new one
        }
        chart = new Chart(ctx, {
            type: 'line', // or 'bar', 'pie', etc.
            data: {
                labels: labels,
                datasets: [{
                    label: 'Subscriptions',
                    data: data,
                    fill: false,
                    borderColor: 'rgb(75, 192, 192)',
                    tension: 0.1
                }]
            },
            options: {
                // ... other options
            }


        });
    }

    // Function to update the chart data
    function updateChartData(timeFrame) {
        var data = [];
        var labels = [];
        // Fetch the data based on the time frame...
        // This is where you would fetch the data from your server
        // and update the 'data' and 'labels' arrays accordingly.

        // For demonstration, here's some dummy data:
        if (timeFrame === 'weekly') {
            data = [20, 30, 25, 35, 40, 45, 50]; // Example data
            labels = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']; // Example labels
        } else { // 'monthly'
            data = [100, 120, 170, 130, 180, 190, 200, 210, 240, 230, 220, 250]; // Example data
            labels = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']; // Example labels
        }
        createChart(data, labels);
    }

    // Initial chart load
    updateChartData('weekly');

    // Event listener for dropdown changes
    document.getElementById('timeFrameSelect').addEventListener('change', function () {
        updateChartData(this.value);
    });
</script>